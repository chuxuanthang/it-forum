(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["/js/custom"],{

/***/ "./resources/js/post-detail.js":
/*!*************************************!*\
  !*** ./resources/js/post-detail.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("toastr.options = {\n  debug: false,\n  positionClass: 'toast-bottom-right',\n  onclick: null,\n  fadeIn: 300,\n  fadeOut: 1000,\n  timeOut: 5000,\n  extendedTimeOut: 1000\n};\n$(window).keydown(function (event) {\n  if (!$('#inputSearch').is(':focus')) {\n    if (event.keyCode == 13) {\n      event.preventDefault();\n      return false;\n    }\n  }\n});\n\nfunction ValidURL(str) {\n  var pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\n  '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|' + // domain name\n  '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n  '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n  '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n  '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locater\n\n  if (!pattern.test(str)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\njQuery.fn.center = function () {\n  this.css('position', 'absolute');\n  this.css('top', ($(window).height() - this.height()) / 2 + $(window).scrollTop() - 100 + 'px');\n  this.css('left', ($(window).width() - this.width()) / 2 + $(window).scrollLeft() + 'px');\n  return this;\n}; // btn report\n\n\n$('body').on('click', '#btnReportPost', function (event) {\n  var mousePosX = event.pageX;\n  $('#report-modal').show(300).center();\n});\n$('body').on('click', '.popup-close', function () {\n  $('#report-modal').hide(300);\n});\n$('body').on('click', '.postReport', function () {\n  var url = $('#reportForm').attr('action');\n  var formData = new FormData(document.getElementById('reportForm'));\n  jQuery.ajax({\n    url: url,\n    type: 'POST',\n    dataType: 'json',\n    data: formData,\n    contentType: false,\n    processData: false,\n    beforeSend: function beforeSend() {\n      $('#reportError').html('');\n    },\n    success: function success(data, textStatus, xhr) {\n      if (data.returnCode == 200) {\n        $('#report-modal').hide(300);\n        $('#note').val('');\n        toastr.success(data.content);\n      } else if (data.returnCode == 401) {\n        toastr.error(data.content);\n      } else if (data.returnCode == 403) {\n        $('#reportError').html(data.content.note);\n      }\n    }\n  });\n}); // end btn report\n\n$('body').on('click', '.button-follow', function () {\n  $(this).attr('disabled', 'disabled');\n  var url = $(this).attr('data-action');\n  var targetId = $(this).attr('data-target-id');\n  var targetType = $(this).attr('data-target-type');\n  var token = $('meta[name=\"csrf-token\"]').attr('content');\n  var self = $(this);\n  jQuery.ajax({\n    url: url,\n    type: 'POST',\n    dataType: 'json',\n    data: {\n      target_id: targetId,\n      target_type: targetType,\n      _token: token\n    },\n    success: function success(data, textStatus, xhr) {\n      if (data.returnCode == 200) {\n        $(self).addClass('followed');\n        $(self).html($('#labelTitle').attr('unfollow-title'));\n        toastr.success(data.content);\n      } else if (data.returnCode == 202) {\n        $(self).removeClass('followed');\n        $(self).html($('#labelTitle').attr('follow-title') + ' +');\n        toastr.success(data.content);\n      } else if (data.returnCode == 401) {\n        toastr.error(data.content);\n      }\n    },\n    complete: function complete() {\n      $(self).removeAttr('disabled');\n    }\n  });\n});\n\nfunction scrollTopTo(scrollTop) {\n  var speed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'fast';\n  $('html, body').animate({\n    scrollTop: scrollTop\n  }, speed);\n} // post detail page\n\n\nvar answerBoxY = $('#answers').offset().top;\nvar commentBoxY = $('#comment-div').offset().top;\n$('#toAnswer').on('click', function () {\n  scrollTopTo(answerBoxY);\n});\n$('#toComment').on('click', function () {\n  scrollTopTo(commentBoxY);\n}); // vote post\n\n$('body').on('click', '.post-vote', function () {\n  if ($(this).hasClass('post-vote-up') && $(this).hasClass('is-selected')) {\n    $('#post-vote-score').attr('data-score', 0);\n  } else if ($(this).hasClass('post-vote-up')) {\n    $('#post-vote-score').attr('data-score', 1);\n  } else if ($(this).hasClass('post-vote-down') && $(this).hasClass('is-selected')) {\n    $('#post-vote-score').attr('data-score', 0);\n  } else {\n    $('#post-vote-score').attr('data-score', -1);\n  }\n\n  var url = $('#post-vote').attr('action');\n  var score = $('#post-vote-score').attr('data-score');\n  var formData = $('#post-vote').serialize() + '&score=' + score;\n  postVote(url, formData, 'post-vote', score);\n});\n$('body').on('click', '.answer-vote', function () {\n  var key = $(this).attr('data-key');\n\n  if ($(this).hasClass('answer-vote-' + key + '-up') && $(this).hasClass('is-selected')) {\n    $('#answer-vote-score-' + key).attr('data-score', 0);\n  } else if ($(this).hasClass('answer-vote-' + key + '-up')) {\n    $('#answer-vote-score-' + key).attr('data-score', 1);\n  } else if ($(this).hasClass('answer-vote-' + key + '-down') && $(this).hasClass('is-selected')) {\n    $('#answer-vote-score-' + key).attr('data-score', 0);\n  } else {\n    $('#answer-vote-score-' + key).attr('data-score', -1);\n  }\n\n  var url = $('#answer-vote-' + key).attr('action');\n  var score = $('#answer-vote-score-' + key).attr('data-score');\n  var formData = $('#answer-vote-' + key).serialize() + '&score=' + score;\n  postVote(url, formData, 'answer-vote-' + key, score);\n});\n\nfunction postVote(url, formData, el, score) {\n  jQuery.ajax({\n    url: url,\n    type: 'POST',\n    dataType: 'json',\n    data: formData,\n    success: function success(data, textStatus, xhr) {\n      if (data.returnCode == 200) {\n        changeStatus(el, score);\n        var tempScore = parseInt($('.' + el + '-label').html()) + data.content.score;\n        $('.' + el + '-label').html(tempScore);\n      } else if (data.returnCode == 401) {\n        toastr.error(data.content);\n      }\n    }\n  });\n}\n\nfunction changeStatus(el, score) {\n  if (score >= 1) {\n    $('.' + el + '-up').addClass('is-selected');\n    $('.' + el + '-down').removeClass('is-selected');\n  } else if (score <= -1) {\n    $('.' + el + '-down').addClass('is-selected');\n    $('.' + el + '-up').removeClass('is-selected');\n  } else {\n    $('.' + el + '-down').removeClass('is-selected');\n    $('.' + el + '-up').removeClass('is-selected');\n  }\n} // ckeditor, answer and write page\n\n\neditor = CKEDITOR.replace('editor');\n\nif (editor) {\n  CKEDITOR.on('instanceReady', function (evt) {\n    evt.editor.dataProcessor.htmlFilter.addRules({\n      elements: {\n        img: function img(el) {\n          el.addClass('img-responsive');\n        }\n      }\n    });\n  });\n  editor.addCommand('mySimpleCommand', {\n    exec: function exec(edt) {\n      var person = prompt('Please enter your name');\n\n      if (!person) {\n        alert('Hãy nhập url!');\n      } else if (!ValidURL(person)) {\n        alert('Url không hợp lệ!');\n      } else {\n        edt.insertHtml('{@embed: ' + person + '}');\n      }\n    }\n  });\n  editor.ui.addButton('SuperButton', {\n    label: 'Online code',\n    command: 'mySimpleCommand',\n    toolbar: 'insert',\n    icon: 'code_link.png'\n  });\n}\n\n$('body').on('mouseenter', '.newComment', function () {\n  setTimeout(function () {\n    $('.newComment').removeClass('newComment');\n  }, 500);\n});\n$('body').on('click', '.showForm', function () {\n  $('.formReply').hide(100);\n  $('#' + $(this).attr('data-form')).show(100);\n  $('#' + $(this).attr('data-form')).removeClass('hidden');\n});\n$('body').on('click', '.hideForm', function () {\n  $('.formReply').hide(100);\n  $('.errors').html('');\n});\n$('body').on('click', '.postComment', function () {\n  var formId = $(this).attr('data-form');\n  var targetBox = $(this).attr('data-target');\n  var editor = CKEDITOR.instances.editor.getData();\n  var formData = new FormData(document.getElementById(formId));\n  var self = $(this);\n  var key = parseInt($('#keyInput').val());\n  var newNumber = parseInt($('#answer-number').text());\n  formData.append('post_id', $('#post_id').val());\n\n  if ($(this).attr('data-ckeditor') == 'yes') {\n    key++;\n    formData.append('content', editor);\n    newNumber++;\n  }\n\n  jQuery.ajax({\n    url: $('#' + formId).attr('action'),\n    type: 'POST',\n    dataType: 'json',\n    data: formData,\n    contentType: false,\n    processData: false,\n    beforeSend: function beforeSend() {\n      $('#errorComment').html('');\n      $(self).addClass('disabled');\n      $('.errors').html('');\n    },\n    success: function success(data, textStatus, xhr) {\n      $(self).removeClass('disabled');\n\n      if (data.returnCode == 200) {\n        $('#' + targetBox).append(data.content);\n        CKEDITOR.instances.editor.setData('');\n        $('.formReply textarea').val('');\n        $('#keyInput').val(key);\n        $('#answer-number').html(newNumber);\n        $('#toAnswer').html(newNumber);\n        setTimeout(function () {\n          $('.newComment').removeClass('newComment');\n        }, 3000);\n\n        if ($(self).attr('data-ckeditor') == 'yes') {\n          scrollTopTo($('#answer-' + key).offset().top - 100);\n        }\n      } else if (data.returnCode == 403) {\n        $('#' + formId + 'Errors').html(data.content);\n      } else if (data.returnCode == 401) {\n        toastr.error(data.content);\n      }\n    },\n    complete: function complete() {\n      $(self).removeClass('disabled');\n    }\n  });\n});\n$('body').on('click', '.vote-best-answer', function () {\n  var url = $(this).attr('data-action');\n  var answerId = $(this).attr('data-answer-id');\n  var postId = $(this).attr('data-post-id');\n  var token = $('meta[name=\"csrf-token\"]').attr('content');\n  var self = $(this);\n  jQuery.ajax({\n    url: url,\n    type: 'POST',\n    dataType: 'json',\n    data: {\n      answer_id: answerId,\n      post_id: postId,\n      _token: token\n    },\n    success: function success(data, textStatus, xhr) {\n      if (data.returnCode == 200) {\n        $('.vote-best-answer').removeClass('fc-green-500');\n        $(self).addClass('fc-green-500');\n        toastr.success(data.content);\n      } else if (data.returnCode == 202) {\n        $('.vote-best-answer').removeClass('fc-green-500');\n        toastr.success(data.content);\n      } else if (data.returnCode == 401) {\n        toastr.error(data.content);\n      }\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/post-detail.js\n");

/***/ }),

/***/ 3:
/*!*******************************************!*\
  !*** multi ./resources/js/post-detail.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /var/www/html/it-forum/resources/js/post-detail.js */"./resources/js/post-detail.js");


/***/ })

},[[3,"/js/manifest"]]]);